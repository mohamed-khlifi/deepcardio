'use client';

import { useEffect, useState } from 'react';
import {
    Dialog,
    DialogContent,
    DialogHeader,
    DialogTitle,
} from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { useAuth0 } from '@auth0/auth0-react';
import {
    Calendar,
    Mail,
    Phone,
    MapPin,
    IdCard,
    User,
    Briefcase,
    Heart,
    Loader2,
} from 'lucide-react';

const API = process.env.NEXT_PUBLIC_API_URL ?? 'http://localhost:8001/api/v1';

interface Props {
    patientId: number | null;
    open: boolean;
    onClose: () => void;
}

interface PatientResponse {
    id: number;
    demographics: {
        first_name: string;
        last_name: string;
        gender: string;
        date_of_birth: string;
        age: number;
        ethnicity?: string | null;
    };
    contact_info: {
        phone?: string | null;
        email?: string | null;
    };
    social_info: {
        marital_status?: string | null;
        occupation?: string | null;
        insurance_provider?: string | null;
        address?: string | null;
    };
}

export function PatientDetailsModal({ patientId, open, onClose }: Props) {
    const { getAccessTokenSilently } = useAuth0();
    const [patient, setPatient] = useState<PatientResponse | null>(null);
    const [loading, setLoading] = useState(false);

    /* fetch patient whenever modal opens */
    useEffect(() => {
        if (!open || patientId == null) return;

        const fetchData = async () => {
            try {
                setLoading(true);
                setPatient(null);
                const token = await getAccessTokenSilently();
                const res = await fetch(`${API}/patients/${patientId}`, {
                    headers: { Authorization: `Bearer ${token}` },
                });
                if (!res.ok) throw new Error(await res.text());
                setPatient(await res.json());
            } catch (err) {
                console.error(err);
            } finally {
                setLoading(false);
            }
        };

        fetchData();
    }, [open, patientId, getAccessTokenSilently]);

    const D = patient?.demographics;
    const C = patient?.contact_info;
    const S = patient?.social_info;

    return (
        <Dialog open={open} onOpenChange={onClose}>
            <DialogContent
                className="max-h-[92vh] max-w-3xl overflow-y-auto rounded-3xl bg-white/95
                   backdrop-blur-md px-10 py-12 shadow-2xl data-[state=open]:animate-fade-in"
            >
                {/* accessible title (sr-only) */}
                <DialogHeader className="sr-only">
                    <DialogTitle>Patient Details</DialogTitle>
                </DialogHeader>

                {/* ---------------- Loader ---------------- */}
                {loading && (
                    <div className="flex flex-col items-center justify-center h-60 gap-4">
                        <Loader2 className="size-6 animate-spin text-primary" />
                        <p className="text-gray-600 text-sm">Loading patient…</p>
                    </div>
                )}

                {/* ---------------- Content ---------------- */}
                {patient && (
                    <>
                        {/* visual header */}
                        <header className="mb-10">
                            <h2 className="text-3xl font-extrabold flex items-center gap-3">
                                <IdCard className="size-7 text-primary" />
                                {D!.first_name} {D!.last_name}
                            </h2>
                            <p className="mt-1 text-gray-500">
                                Patient&nbsp;ID:&nbsp;
                                <span className="font-mono text-sm text-gray-700">{patient.id}</span>
                            </p>
                        </header>

                        {/* cards grid */}
                        <section className="grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
                            {/* Demographics */}
                            <div className="rounded-2xl border shadow-sm bg-white p-6 space-y-2">
                                <h3 className="font-semibold mb-3 flex items-center gap-2 text-primary">
                                    <User className="size-4" />
                                    Demographics
                                </h3>
                                <ul className="text-sm text-gray-700 space-y-1">
                                    <li>
                                        <span className="font-medium">Gender:</span> {D!.gender}
                                    </li>
                                    <li className="flex items-center gap-1">
                                        <Calendar className="size-3" />
                                        {new Date(D!.date_of_birth).toLocaleDateString()} (
                                        {D!.age} yrs)
                                    </li>
                                    {D!.ethnicity && (
                                        <li>
                                            <span className="font-medium">Ethnicity:</span>{' '}
                                            {D!.ethnicity}
                                        </li>
                                    )}
                                </ul>
                            </div>

                            {/* Contact */}
                            <div className="rounded-2xl border shadow-sm bg-white p-6 space-y-2">
                                <h3 className="font-semibold mb-3 flex items-center gap-2 text-primary">
                                    <Phone className="size-4" />
                                    Contact
                                </h3>
                                <ul className="text-sm text-gray-700 space-y-1">
                                    {C!.phone && (
                                        <li className="flex items-center gap-1">
                                            <Phone className="size-3" />
                                            {C!.phone}
                                        </li>
                                    )}
                                    {C!.email && (
                                        <li className="flex items-center gap-1">
                                            <Mail className="size-3" />
                                            {C!.email}
                                        </li>
                                    )}
                                    {!C!.phone && !C!.email && <li className="italic">—</li>}
                                </ul>
                            </div>

                            {/* Social / Insurance */}
                            <div className="rounded-2xl border shadow-sm bg-white p-6 space-y-2">
                                <h3 className="font-semibold mb-3 flex items-center gap-2 text-primary">
                                    <Heart className="size-4" />
                                    Social &amp; Insurance
                                </h3>
                                <ul className="text-sm text-gray-700 space-y-1">
                                    {S!.marital_status && (
                                        <li>
                                            <span className="font-medium">Marital status:</span>{' '}
                                            {S!.marital_status}
                                        </li>
                                    )}
                                    {S!.occupation && (
                                        <li className="flex items-center gap-1">
                                            <Briefcase className="size-3" />
                                            {S!.occupation}
                                        </li>
                                    )}
                                    {S!.insurance_provider && (
                                        <li>
                                            <span className="font-medium">Insurance:</span>{' '}
                                            {S!.insurance_provider}
                                        </li>
                                    )}
                                    {S!.address && (
                                        <li className="flex items-center gap-1">
                                            <MapPin className="size-3" />
                                            {S!.address}
                                        </li>
                                    )}
                                    {!S!.marital_status &&
                                        !S!.occupation &&
                                        !S!.insurance_provider &&
                                        !S!.address && <li className="italic">—</li>}
                                </ul>
                            </div>
                        </section>

                        {/* footer */}
                        <div className="mt-12">
                            <Button className="w-full" onClick={onClose}>
                                Close
                            </Button>
                        </div>
                    </>
                )}
            </DialogContent>
        </Dialog>
    );
}


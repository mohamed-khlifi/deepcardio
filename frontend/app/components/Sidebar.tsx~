'use client';

import { cn } from '@/lib/utils';
import { buttonVariants } from '@/components/ui/button';
import {
    Home,
    Stethoscope,
    History,
    HeartPulse,
    FlaskConical,
    NotebookTabs,
    Languages,
} from 'lucide-react';

import {
    DropdownMenu,
    DropdownMenuContent,
    DropdownMenuItem,
    DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu';

import { useState } from 'react';

export type Section =
    | 'home'
    | 'symptoms'
    | 'history'
    | 'vitals'
    | 'tests'
    | 'summary';

const NAV: { id: Section; label: string; icon: React.ReactNode }[] = [
    { id: 'home',     label: 'Dashboard',        icon: <Home className="size-4" /> },
    { id: 'symptoms', label: 'Symptoms',         icon: <Stethoscope className="size-4" /> },
    { id: 'history',  label: 'Personal History', icon: <History className="size-4" /> },
    { id: 'vitals',   label: 'Vital Signs',      icon: <HeartPulse className="size-4" /> },
    { id: 'tests',    label: 'Test Results',     icon: <FlaskConical className="size-4" /> },
    { id: 'summary',  label: 'Summary',          icon: <NotebookTabs className="size-4" /> },
];

export function Sidebar({
                            active,
                            onChange,
                        }: {
    active: Section;
    onChange: (s: Section) => void;
}) {
    const [language, setLanguage] = useState<'en' | 'fr'>('en');

    const handleLanguageChange = (lang: 'en' | 'fr') => {
        setLanguage(lang);
        // Optionally trigger i18n or refresh here
    };

    return (
        <aside className="w-64 bg-white shadow-md flex flex-col justify-between">
            <div>
                <div className="h-16 flex items-center justify-center font-bold text-xl border-b">
                    DeepCardio
                </div>

                <nav className="flex-1 p-4 space-y-2">
                    {NAV.map(({ id, label, icon }) => (
                        <button
                            key={id}
                            onClick={() => onChange(id)}
                            className={cn(
                                buttonVariants({
                                    variant: active === id ? 'default' : 'ghost',
                                    size: 'sm',
                                }),
                                'w-full justify-start',
                            )}
                        >
                            {icon}
                            {label}
                        </button>
                    ))}
                </nav>
            </div>

            <div className="p-4 border-t">
                <DropdownMenu>
                    <DropdownMenuTrigger
                        className={cn(
                            buttonVariants({ variant: 'ghost', size: 'sm' }),
                            'w-full justify-between text-muted-foreground hover:text-foreground',
                        )}
                    >
                        <span className="flex items-center gap-2">
                            <Languages className="size-4" />
                            {language === 'en' ? 'English' : 'Français'}
                        </span>
                        <span className="text-xs text-gray-400">▼</span>
                    </DropdownMenuTrigger>
                    <DropdownMenuContent className="w-full mt-2">
                        <DropdownMenuItem
                            onClick={() => handleLanguageChange('en')}
                            className={cn(language === 'en' && 'font-semibold')}
                        >
                            English
                        </DropdownMenuItem>
                        <DropdownMenuItem
                            onClick={() => handleLanguageChange('fr')}
                            className={cn(language === 'fr' && 'font-semibold')}
                        >
                            Français
                        </DropdownMenuItem>
                    </DropdownMenuContent>
                </DropdownMenu>
            </div>
        </aside>
    );
}
